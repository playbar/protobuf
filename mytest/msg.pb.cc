// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#include "msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_msg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_data_t_msg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_msg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_kv_t_msg_2eproto;
namespace demo {
class data_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<data_t> _instance;
} _data_t_default_instance_;
class kv_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<kv_t> _instance;
} _kv_t_default_instance_;
class msgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<msg> _instance;
} _msg_default_instance_;
}  // namespace demo
static void InitDefaultsdata_t_msg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::demo::_data_t_default_instance_;
    new (ptr) ::demo::data_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::demo::data_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_data_t_msg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsdata_t_msg_2eproto}, {}};

static void InitDefaultskv_t_msg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::demo::_kv_t_default_instance_;
    new (ptr) ::demo::kv_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::demo::kv_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_kv_t_msg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultskv_t_msg_2eproto}, {}};

static void InitDefaultsmsg_msg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::demo::_msg_default_instance_;
    new (ptr) ::demo::msg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::demo::msg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_msg_msg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsmsg_msg_2eproto}, {
      &scc_info_data_t_msg_2eproto.base,
      &scc_info_kv_t_msg_2eproto.base,}};

void InitDefaults_msg_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_data_t_msg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_kv_t_msg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_msg_msg_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_msg_2eproto[3];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_msg_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_msg_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_msg_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::demo::data_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::demo::data_t, data_int_info_),
  PROTOBUF_FIELD_OFFSET(::demo::data_t, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::demo::kv_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::demo::kv_t, key_),
  PROTOBUF_FIELD_OFFSET(::demo::kv_t, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::demo::msg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::demo::msg, int_info_),
  PROTOBUF_FIELD_OFFSET(::demo::msg, string_info_),
  PROTOBUF_FIELD_OFFSET(::demo::msg, data_info_),
  PROTOBUF_FIELD_OFFSET(::demo::msg, opt_info_),
  PROTOBUF_FIELD_OFFSET(::demo::msg, vector_info_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::demo::data_t)},
  { 7, -1, sizeof(::demo::kv_t)},
  { 14, -1, sizeof(::demo::msg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::demo::_data_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::demo::_kv_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::demo::_msg_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_msg_2eproto = {
  {}, AddDescriptors_msg_2eproto, "msg.proto", schemas,
  file_default_instances, TableStruct_msg_2eproto::offsets,
  file_level_metadata_msg_2eproto, 3, file_level_enum_descriptors_msg_2eproto, file_level_service_descriptors_msg_2eproto,
};

::google::protobuf::internal::DescriptorTable descriptor_table_msg_2eproto = {
  false, InitDefaults_msg_2eproto, 
  "\n\tmsg.proto\022\004demo\"-\n\006data_t\022\025\n\rdata_int_"
  "info\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\"\"\n\004kv_t\022\013\n\003key\030"
  "\001 \001(\005\022\r\n\005value\030\002 \001(\t\"\200\001\n\003msg\022\020\n\010int_info"
  "\030\001 \001(\005\022\023\n\013string_info\030\002 \001(\t\022\037\n\tdata_info"
  "\030\003 \001(\0132\014.demo.data_t\022\020\n\010opt_info\030\004 \001(\t\022\037"
  "\n\013vector_info\030\005 \003(\0132\n.demo.kv_tb\006proto3"
,
  "msg.proto", &assign_descriptors_table_msg_2eproto, 239,
};

void AddDescriptors_msg_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_msg_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_msg_2eproto = []() { AddDescriptors_msg_2eproto(); return true; }();
namespace demo {

// ===================================================================

void data_t::InitAsDefaultInstance() {
}
class data_t::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int data_t::kDataIntInfoFieldNumber;
const int data_t::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

data_t::data_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:demo.data_t)
}
data_t::data_t(const data_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  data_int_info_ = from.data_int_info_;
  // @@protoc_insertion_point(copy_constructor:demo.data_t)
}

void data_t::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_data_t_msg_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_int_info_ = 0;
}

data_t::~data_t() {
  // @@protoc_insertion_point(destructor:demo.data_t)
  SharedDtor();
}

void data_t::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void data_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const data_t& data_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_data_t_msg_2eproto.base);
  return *internal_default_instance();
}


void data_t::Clear() {
// @@protoc_insertion_point(message_clear_start:demo.data_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_int_info_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* data_t::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<data_t*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 data_int_info = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_data_int_info(value);
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("demo.data_t.name");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8;
        ::std::string* str = msg->mutable_name();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool data_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:demo.data_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 data_int_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_int_info_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "demo.data_t.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:demo.data_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:demo.data_t)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void data_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:demo.data_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 data_int_info = 1;
  if (this->data_int_info() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->data_int_info(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "demo.data_t.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:demo.data_t)
}

::google::protobuf::uint8* data_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:demo.data_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 data_int_info = 1;
  if (this->data_int_info() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->data_int_info(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "demo.data_t.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:demo.data_t)
  return target;
}

size_t data_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:demo.data_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 data_int_info = 1;
  if (this->data_int_info() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data_int_info());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void data_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:demo.data_t)
  GOOGLE_DCHECK_NE(&from, this);
  const data_t* source =
      ::google::protobuf::DynamicCastToGenerated<data_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:demo.data_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:demo.data_t)
    MergeFrom(*source);
  }
}

void data_t::MergeFrom(const data_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:demo.data_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.data_int_info() != 0) {
    set_data_int_info(from.data_int_info());
  }
}

void data_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:demo.data_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void data_t::CopyFrom(const data_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:demo.data_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool data_t::IsInitialized() const {
  return true;
}

void data_t::Swap(data_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void data_t::InternalSwap(data_t* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_int_info_, other->data_int_info_);
}

::google::protobuf::Metadata data_t::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_msg_2eproto);
  return ::file_level_metadata_msg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void kv_t::InitAsDefaultInstance() {
}
class kv_t::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int kv_t::kKeyFieldNumber;
const int kv_t::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

kv_t::kv_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:demo.kv_t)
}
kv_t::kv_t(const kv_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  key_ = from.key_;
  // @@protoc_insertion_point(copy_constructor:demo.kv_t)
}

void kv_t::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_kv_t_msg_2eproto.base);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_ = 0;
}

kv_t::~kv_t() {
  // @@protoc_insertion_point(destructor:demo.kv_t)
  SharedDtor();
}

void kv_t::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void kv_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const kv_t& kv_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_kv_t_msg_2eproto.base);
  return *internal_default_instance();
}


void kv_t::Clear() {
// @@protoc_insertion_point(message_clear_start:demo.kv_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* kv_t::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<kv_t*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_key(value);
        break;
      }
      // string value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("demo.kv_t.value");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8;
        ::std::string* str = msg->mutable_value();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool kv_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:demo.kv_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "demo.kv_t.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:demo.kv_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:demo.kv_t)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void kv_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:demo.kv_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 key = 1;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "demo.kv_t.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:demo.kv_t)
}

::google::protobuf::uint8* kv_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:demo.kv_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 key = 1;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "demo.kv_t.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:demo.kv_t)
  return target;
}

size_t kv_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:demo.kv_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // int32 key = 1;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void kv_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:demo.kv_t)
  GOOGLE_DCHECK_NE(&from, this);
  const kv_t* source =
      ::google::protobuf::DynamicCastToGenerated<kv_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:demo.kv_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:demo.kv_t)
    MergeFrom(*source);
  }
}

void kv_t::MergeFrom(const kv_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:demo.kv_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.key() != 0) {
    set_key(from.key());
  }
}

void kv_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:demo.kv_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void kv_t::CopyFrom(const kv_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:demo.kv_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool kv_t::IsInitialized() const {
  return true;
}

void kv_t::Swap(kv_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void kv_t::InternalSwap(kv_t* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(key_, other->key_);
}

::google::protobuf::Metadata kv_t::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_msg_2eproto);
  return ::file_level_metadata_msg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void msg::InitAsDefaultInstance() {
  ::demo::_msg_default_instance_._instance.get_mutable()->data_info_ = const_cast< ::demo::data_t*>(
      ::demo::data_t::internal_default_instance());
}
class msg::HasBitSetters {
 public:
  static const ::demo::data_t& data_info(const msg* msg);
};

const ::demo::data_t&
msg::HasBitSetters::data_info(const msg* msg) {
  return *msg->data_info_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msg::kIntInfoFieldNumber;
const int msg::kStringInfoFieldNumber;
const int msg::kDataInfoFieldNumber;
const int msg::kOptInfoFieldNumber;
const int msg::kVectorInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msg::msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:demo.msg)
}
msg::msg(const msg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      vector_info_(from.vector_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  string_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.string_info().size() > 0) {
    string_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_info_);
  }
  opt_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.opt_info().size() > 0) {
    opt_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opt_info_);
  }
  if (from.has_data_info()) {
    data_info_ = new ::demo::data_t(*from.data_info_);
  } else {
    data_info_ = NULL;
  }
  int_info_ = from.int_info_;
  // @@protoc_insertion_point(copy_constructor:demo.msg)
}

void msg::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_msg_msg_2eproto.base);
  string_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opt_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&int_info_) -
      reinterpret_cast<char*>(&data_info_)) + sizeof(int_info_));
}

msg::~msg() {
  // @@protoc_insertion_point(destructor:demo.msg)
  SharedDtor();
}

void msg::SharedDtor() {
  string_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opt_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_info_;
}

void msg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const msg& msg::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_msg_msg_2eproto.base);
  return *internal_default_instance();
}


void msg::Clear() {
// @@protoc_insertion_point(message_clear_start:demo.msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vector_info_.Clear();
  string_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opt_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_info_ != NULL) {
    delete data_info_;
  }
  data_info_ = NULL;
  int_info_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* msg::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<msg*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 int_info = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_int_info(value);
        break;
      }
      // string string_info = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("demo.msg.string_info");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8;
        ::std::string* str = msg->mutable_string_info();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // .demo.data_t data_info = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::demo::data_t::_InternalParse;
        object = msg->mutable_data_info();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      // string opt_info = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("demo.msg.opt_info");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8;
        ::std::string* str = msg->mutable_opt_info();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // repeated .demo.kv_t vector_info = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::demo::kv_t::_InternalParse;
          object = msg->add_vector_info();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          bool ok = ctx->ParseExactRange({parser_till_end, object},
                                         ptr, newend);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:demo.msg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 int_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int_info_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string string_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_info().data(), static_cast<int>(this->string_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "demo.msg.string_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .demo.data_t data_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string opt_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_opt_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->opt_info().data(), static_cast<int>(this->opt_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "demo.msg.opt_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .demo.kv_t vector_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vector_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:demo.msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:demo.msg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:demo.msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 int_info = 1;
  if (this->int_info() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->int_info(), output);
  }

  // string string_info = 2;
  if (this->string_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_info().data(), static_cast<int>(this->string_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "demo.msg.string_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->string_info(), output);
  }

  // .demo.data_t data_info = 3;
  if (this->has_data_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::data_info(this), output);
  }

  // string opt_info = 4;
  if (this->opt_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opt_info().data(), static_cast<int>(this->opt_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "demo.msg.opt_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->opt_info(), output);
  }

  // repeated .demo.kv_t vector_info = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vector_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->vector_info(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:demo.msg)
}

::google::protobuf::uint8* msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:demo.msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 int_info = 1;
  if (this->int_info() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->int_info(), target);
  }

  // string string_info = 2;
  if (this->string_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_info().data(), static_cast<int>(this->string_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "demo.msg.string_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->string_info(), target);
  }

  // .demo.data_t data_info = 3;
  if (this->has_data_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::data_info(this), deterministic, target);
  }

  // string opt_info = 4;
  if (this->opt_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opt_info().data(), static_cast<int>(this->opt_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "demo.msg.opt_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->opt_info(), target);
  }

  // repeated .demo.kv_t vector_info = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vector_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->vector_info(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:demo.msg)
  return target;
}

size_t msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:demo.msg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .demo.kv_t vector_info = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->vector_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vector_info(static_cast<int>(i)));
    }
  }

  // string string_info = 2;
  if (this->string_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->string_info());
  }

  // string opt_info = 4;
  if (this->opt_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->opt_info());
  }

  // .demo.data_t data_info = 3;
  if (this->has_data_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_info_);
  }

  // int32 int_info = 1;
  if (this->int_info() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int_info());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:demo.msg)
  GOOGLE_DCHECK_NE(&from, this);
  const msg* source =
      ::google::protobuf::DynamicCastToGenerated<msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:demo.msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:demo.msg)
    MergeFrom(*source);
  }
}

void msg::MergeFrom(const msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:demo.msg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vector_info_.MergeFrom(from.vector_info_);
  if (from.string_info().size() > 0) {

    string_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_info_);
  }
  if (from.opt_info().size() > 0) {

    opt_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opt_info_);
  }
  if (from.has_data_info()) {
    mutable_data_info()->::demo::data_t::MergeFrom(from.data_info());
  }
  if (from.int_info() != 0) {
    set_int_info(from.int_info());
  }
}

void msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:demo.msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg::CopyFrom(const msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:demo.msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msg::IsInitialized() const {
  return true;
}

void msg::Swap(msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msg::InternalSwap(msg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&vector_info_)->InternalSwap(CastToBase(&other->vector_info_));
  string_info_.Swap(&other->string_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  opt_info_.Swap(&other->opt_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_info_, other->data_info_);
  swap(int_info_, other->int_info_);
}

::google::protobuf::Metadata msg::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_msg_2eproto);
  return ::file_level_metadata_msg_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace demo
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::demo::data_t* Arena::CreateMaybeMessage< ::demo::data_t >(Arena* arena) {
  return Arena::CreateInternal< ::demo::data_t >(arena);
}
template<> PROTOBUF_NOINLINE ::demo::kv_t* Arena::CreateMaybeMessage< ::demo::kv_t >(Arena* arena) {
  return Arena::CreateInternal< ::demo::kv_t >(arena);
}
template<> PROTOBUF_NOINLINE ::demo::msg* Arena::CreateMaybeMessage< ::demo::msg >(Arena* arena) {
  return Arena::CreateInternal< ::demo::msg >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
