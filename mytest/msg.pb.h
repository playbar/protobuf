// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#ifndef PROTOBUF_INCLUDED_msg_2eproto
#define PROTOBUF_INCLUDED_msg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_msg_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_msg_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_msg_2eproto();
namespace demo {
class data_t;
class data_tDefaultTypeInternal;
extern data_tDefaultTypeInternal _data_t_default_instance_;
class kv_t;
class kv_tDefaultTypeInternal;
extern kv_tDefaultTypeInternal _kv_t_default_instance_;
class msg;
class msgDefaultTypeInternal;
extern msgDefaultTypeInternal _msg_default_instance_;
}  // namespace demo
namespace google {
namespace protobuf {
template<> ::demo::data_t* Arena::CreateMaybeMessage<::demo::data_t>(Arena*);
template<> ::demo::kv_t* Arena::CreateMaybeMessage<::demo::kv_t>(Arena*);
template<> ::demo::msg* Arena::CreateMaybeMessage<::demo::msg>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace demo {

// ===================================================================

class data_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:demo.data_t) */ {
 public:
  data_t();
  virtual ~data_t();

  data_t(const data_t& from);

  inline data_t& operator=(const data_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  data_t(data_t&& from) noexcept
    : data_t() {
    *this = ::std::move(from);
  }

  inline data_t& operator=(data_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const data_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const data_t* internal_default_instance() {
    return reinterpret_cast<const data_t*>(
               &_data_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(data_t* other);
  friend void swap(data_t& a, data_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline data_t* New() const final {
    return CreateMaybeMessage<data_t>(NULL);
  }

  data_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<data_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const data_t& from);
  void MergeFrom(const data_t& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(data_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 data_int_info = 1;
  void clear_data_int_info();
  static const int kDataIntInfoFieldNumber = 1;
  ::google::protobuf::int32 data_int_info() const;
  void set_data_int_info(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:demo.data_t)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 data_int_info_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_2eproto;
};
// -------------------------------------------------------------------

class kv_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:demo.kv_t) */ {
 public:
  kv_t();
  virtual ~kv_t();

  kv_t(const kv_t& from);

  inline kv_t& operator=(const kv_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  kv_t(kv_t&& from) noexcept
    : kv_t() {
    *this = ::std::move(from);
  }

  inline kv_t& operator=(kv_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const kv_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const kv_t* internal_default_instance() {
    return reinterpret_cast<const kv_t*>(
               &_kv_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(kv_t* other);
  friend void swap(kv_t& a, kv_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline kv_t* New() const final {
    return CreateMaybeMessage<kv_t>(NULL);
  }

  kv_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<kv_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const kv_t& from);
  void MergeFrom(const kv_t& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(kv_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // int32 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:demo.kv_t)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int32 key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_2eproto;
};
// -------------------------------------------------------------------

class msg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:demo.msg) */ {
 public:
  msg();
  virtual ~msg();

  msg(const msg& from);

  inline msg& operator=(const msg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg(msg&& from) noexcept
    : msg() {
    *this = ::std::move(from);
  }

  inline msg& operator=(msg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const msg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg* internal_default_instance() {
    return reinterpret_cast<const msg*>(
               &_msg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(msg* other);
  friend void swap(msg& a, msg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg* New() const final {
    return CreateMaybeMessage<msg>(NULL);
  }

  msg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg& from);
  void MergeFrom(const msg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .demo.kv_t vector_info = 5;
  int vector_info_size() const;
  void clear_vector_info();
  static const int kVectorInfoFieldNumber = 5;
  ::demo::kv_t* mutable_vector_info(int index);
  ::google::protobuf::RepeatedPtrField< ::demo::kv_t >*
      mutable_vector_info();
  const ::demo::kv_t& vector_info(int index) const;
  ::demo::kv_t* add_vector_info();
  const ::google::protobuf::RepeatedPtrField< ::demo::kv_t >&
      vector_info() const;

  // string string_info = 2;
  void clear_string_info();
  static const int kStringInfoFieldNumber = 2;
  const ::std::string& string_info() const;
  void set_string_info(const ::std::string& value);
  #if LANG_CXX11
  void set_string_info(::std::string&& value);
  #endif
  void set_string_info(const char* value);
  void set_string_info(const char* value, size_t size);
  ::std::string* mutable_string_info();
  ::std::string* release_string_info();
  void set_allocated_string_info(::std::string* string_info);

  // string opt_info = 4;
  void clear_opt_info();
  static const int kOptInfoFieldNumber = 4;
  const ::std::string& opt_info() const;
  void set_opt_info(const ::std::string& value);
  #if LANG_CXX11
  void set_opt_info(::std::string&& value);
  #endif
  void set_opt_info(const char* value);
  void set_opt_info(const char* value, size_t size);
  ::std::string* mutable_opt_info();
  ::std::string* release_opt_info();
  void set_allocated_opt_info(::std::string* opt_info);

  // .demo.data_t data_info = 3;
  bool has_data_info() const;
  void clear_data_info();
  static const int kDataInfoFieldNumber = 3;
  const ::demo::data_t& data_info() const;
  ::demo::data_t* release_data_info();
  ::demo::data_t* mutable_data_info();
  void set_allocated_data_info(::demo::data_t* data_info);

  // int32 int_info = 1;
  void clear_int_info();
  static const int kIntInfoFieldNumber = 1;
  ::google::protobuf::int32 int_info() const;
  void set_int_info(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:demo.msg)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::demo::kv_t > vector_info_;
  ::google::protobuf::internal::ArenaStringPtr string_info_;
  ::google::protobuf::internal::ArenaStringPtr opt_info_;
  ::demo::data_t* data_info_;
  ::google::protobuf::int32 int_info_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// data_t

// int32 data_int_info = 1;
inline void data_t::clear_data_int_info() {
  data_int_info_ = 0;
}
inline ::google::protobuf::int32 data_t::data_int_info() const {
  // @@protoc_insertion_point(field_get:demo.data_t.data_int_info)
  return data_int_info_;
}
inline void data_t::set_data_int_info(::google::protobuf::int32 value) {
  
  data_int_info_ = value;
  // @@protoc_insertion_point(field_set:demo.data_t.data_int_info)
}

// string name = 2;
inline void data_t::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& data_t::name() const {
  // @@protoc_insertion_point(field_get:demo.data_t.name)
  return name_.GetNoArena();
}
inline void data_t::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:demo.data_t.name)
}
#if LANG_CXX11
inline void data_t::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:demo.data_t.name)
}
#endif
inline void data_t::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:demo.data_t.name)
}
inline void data_t::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:demo.data_t.name)
}
inline ::std::string* data_t::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:demo.data_t.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* data_t::release_name() {
  // @@protoc_insertion_point(field_release:demo.data_t.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void data_t::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:demo.data_t.name)
}

// -------------------------------------------------------------------

// kv_t

// int32 key = 1;
inline void kv_t::clear_key() {
  key_ = 0;
}
inline ::google::protobuf::int32 kv_t::key() const {
  // @@protoc_insertion_point(field_get:demo.kv_t.key)
  return key_;
}
inline void kv_t::set_key(::google::protobuf::int32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:demo.kv_t.key)
}

// string value = 2;
inline void kv_t::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& kv_t::value() const {
  // @@protoc_insertion_point(field_get:demo.kv_t.value)
  return value_.GetNoArena();
}
inline void kv_t::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:demo.kv_t.value)
}
#if LANG_CXX11
inline void kv_t::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:demo.kv_t.value)
}
#endif
inline void kv_t::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:demo.kv_t.value)
}
inline void kv_t::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:demo.kv_t.value)
}
inline ::std::string* kv_t::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:demo.kv_t.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* kv_t::release_value() {
  // @@protoc_insertion_point(field_release:demo.kv_t.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void kv_t::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:demo.kv_t.value)
}

// -------------------------------------------------------------------

// msg

// int32 int_info = 1;
inline void msg::clear_int_info() {
  int_info_ = 0;
}
inline ::google::protobuf::int32 msg::int_info() const {
  // @@protoc_insertion_point(field_get:demo.msg.int_info)
  return int_info_;
}
inline void msg::set_int_info(::google::protobuf::int32 value) {
  
  int_info_ = value;
  // @@protoc_insertion_point(field_set:demo.msg.int_info)
}

// string string_info = 2;
inline void msg::clear_string_info() {
  string_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg::string_info() const {
  // @@protoc_insertion_point(field_get:demo.msg.string_info)
  return string_info_.GetNoArena();
}
inline void msg::set_string_info(const ::std::string& value) {
  
  string_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:demo.msg.string_info)
}
#if LANG_CXX11
inline void msg::set_string_info(::std::string&& value) {
  
  string_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:demo.msg.string_info)
}
#endif
inline void msg::set_string_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  string_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:demo.msg.string_info)
}
inline void msg::set_string_info(const char* value, size_t size) {
  
  string_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:demo.msg.string_info)
}
inline ::std::string* msg::mutable_string_info() {
  
  // @@protoc_insertion_point(field_mutable:demo.msg.string_info)
  return string_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg::release_string_info() {
  // @@protoc_insertion_point(field_release:demo.msg.string_info)
  
  return string_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg::set_allocated_string_info(::std::string* string_info) {
  if (string_info != NULL) {
    
  } else {
    
  }
  string_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_info);
  // @@protoc_insertion_point(field_set_allocated:demo.msg.string_info)
}

// .demo.data_t data_info = 3;
inline bool msg::has_data_info() const {
  return this != internal_default_instance() && data_info_ != NULL;
}
inline void msg::clear_data_info() {
  if (GetArenaNoVirtual() == NULL && data_info_ != NULL) {
    delete data_info_;
  }
  data_info_ = NULL;
}
inline const ::demo::data_t& msg::data_info() const {
  const ::demo::data_t* p = data_info_;
  // @@protoc_insertion_point(field_get:demo.msg.data_info)
  return p != NULL ? *p : *reinterpret_cast<const ::demo::data_t*>(
      &::demo::_data_t_default_instance_);
}
inline ::demo::data_t* msg::release_data_info() {
  // @@protoc_insertion_point(field_release:demo.msg.data_info)
  
  ::demo::data_t* temp = data_info_;
  data_info_ = NULL;
  return temp;
}
inline ::demo::data_t* msg::mutable_data_info() {
  
  if (data_info_ == NULL) {
    auto* p = CreateMaybeMessage<::demo::data_t>(GetArenaNoVirtual());
    data_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:demo.msg.data_info)
  return data_info_;
}
inline void msg::set_allocated_data_info(::demo::data_t* data_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_info_;
  }
  if (data_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data_info, submessage_arena);
    }
    
  } else {
    
  }
  data_info_ = data_info;
  // @@protoc_insertion_point(field_set_allocated:demo.msg.data_info)
}

// string opt_info = 4;
inline void msg::clear_opt_info() {
  opt_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg::opt_info() const {
  // @@protoc_insertion_point(field_get:demo.msg.opt_info)
  return opt_info_.GetNoArena();
}
inline void msg::set_opt_info(const ::std::string& value) {
  
  opt_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:demo.msg.opt_info)
}
#if LANG_CXX11
inline void msg::set_opt_info(::std::string&& value) {
  
  opt_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:demo.msg.opt_info)
}
#endif
inline void msg::set_opt_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  opt_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:demo.msg.opt_info)
}
inline void msg::set_opt_info(const char* value, size_t size) {
  
  opt_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:demo.msg.opt_info)
}
inline ::std::string* msg::mutable_opt_info() {
  
  // @@protoc_insertion_point(field_mutable:demo.msg.opt_info)
  return opt_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg::release_opt_info() {
  // @@protoc_insertion_point(field_release:demo.msg.opt_info)
  
  return opt_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg::set_allocated_opt_info(::std::string* opt_info) {
  if (opt_info != NULL) {
    
  } else {
    
  }
  opt_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), opt_info);
  // @@protoc_insertion_point(field_set_allocated:demo.msg.opt_info)
}

// repeated .demo.kv_t vector_info = 5;
inline int msg::vector_info_size() const {
  return vector_info_.size();
}
inline void msg::clear_vector_info() {
  vector_info_.Clear();
}
inline ::demo::kv_t* msg::mutable_vector_info(int index) {
  // @@protoc_insertion_point(field_mutable:demo.msg.vector_info)
  return vector_info_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::demo::kv_t >*
msg::mutable_vector_info() {
  // @@protoc_insertion_point(field_mutable_list:demo.msg.vector_info)
  return &vector_info_;
}
inline const ::demo::kv_t& msg::vector_info(int index) const {
  // @@protoc_insertion_point(field_get:demo.msg.vector_info)
  return vector_info_.Get(index);
}
inline ::demo::kv_t* msg::add_vector_info() {
  // @@protoc_insertion_point(field_add:demo.msg.vector_info)
  return vector_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::demo::kv_t >&
msg::vector_info() const {
  // @@protoc_insertion_point(field_list:demo.msg.vector_info)
  return vector_info_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace demo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_msg_2eproto
